@use "bulma/sass/utilities/derived-variables" as dv;
@use "bulma/sass/utilities/css-variables" as cv;

$theme-colors: dv.$colors !default;
$item-width: 25rem !default;
$progressbar-radius: 0 cv.getVar("radius") cv.getVar("radius")
  cv.getVar("radius") !default;
$notification-radius: cv.getVar("radius") !default;
$notification-shadow:
  0 1px 4px
    hsla(
      cv.getVar("shadow-h"),
      cv.getVar("shadow-s"),
      cv.getVar("shadow-l"),
      0.12
    ),
  0 0 6px
    hsla(
      cv.getVar("shadow-h"),
      cv.getVar("shadow-s"),
      cv.getVar("shadow-l"),
      0.04
    ) !default;
$snackbar-radius: cv.getVar("radius") !default;
$snackbar-shadow:
  0 1px 4px
    hsla(
      cv.getVar("shadow-h"),
      cv.getVar("shadow-s"),
      cv.getVar("shadow-l"),
      0.12
    ),
  0 0 6px
    hsla(
      cv.getVar("shadow-h"),
      cv.getVar("shadow-s"),
      cv.getVar("shadow-l"),
      0.04
    ) !default;
$toast-radius: 1.5em !default;
$toast-shadow:
  0 1px 4px
    hsla(
      cv.getVar("shadow-h"),
      cv.getVar("shadow-s"),
      cv.getVar("shadow-l"),
      0.12
    ),
  0 0 6px
    hsla(
      cv.getVar("shadow-h"),
      cv.getVar("shadow-s"),
      cv.getVar("shadow-l"),
      0.04
    ) !default;

.kws-floatie-output {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  padding: 0.5em;
  z-index: 1000;
  pointer-events: none;
  display: flex;
  &.is-top {
    flex-direction: column;
  }
  &.is-bottom {
    flex-direction: column-reverse;
  }
}

.kws-floatie-item {
  display: inline-flex;
  transform: translate3d(0, 0, 0);
  pointer-events: none;
  margin-bottom: 1rem;
  max-width: $item-width;
  min-width: $item-width;
  &.has-toast {
    max-width: 100%;
    width: fit-content;
  }
  &.is-top,
  &.is-bottom {
    align-self: center;
    justify-content: center;
  }
  &.is-top-left,
  &.is-bottom-left {
    align-self: flex-start;
    justify-content: flex-start;
  }
  &.is-top-right,
  &.is-bottom-right {
    align-self: flex-end;
    justify-content: flex-end;
  }
  .floatie-progress {
    background: currentColor;
    height: 0.25em;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0%;
    animation-name: floatie-progress-running;
    animation-fill-mode: forwards;
    animation-timing-function: linear;
    border-radius: $progressbar-radius;
  }
  .notification {
    padding: 0.5em 0.75em;
    position: relative;
    font-size: 1rem;
    width: 100%;
    pointer-events: auto;
    border-radius: $notification-radius;
    box-shadow: $notification-shadow;
    p {
      margin: 0;
    }
  }
  .snackbar {
    display: inline-flex;
    position: relative;
    align-items: center;
    justify-content: space-around;
    border-radius: $snackbar-radius;
    box-shadow: $snackbar-shadow;
    pointer-events: auto;
    min-height: 3em;
    background: cv.getVar("scheme-invert");
    color: cv.getVar("text-invert");
    font-size: 1rem;

    .text {
      margin: 0.5em 0.75em;
    }

    .action {
      display: inline-flex;
      align-items: flex-end;
      margin-left: auto;
      margin-right: 0.5em;
      padding-left: 0;

      .button {
        font-weight: 600;
        text-transform: uppercase;
        position: relative;
        background: transparent;
        color: currentColor;
        border: none;
        padding-left: 0.5em;
        padding-right: 0.5em;
        &:hover {
          background: rgba(0, 0, 0, 0.1);
        }
      }
    }

    @each $name, $pair in $theme-colors {
      $color: cv.getVar($name);
      $color-invert: cv.getVar($name, "", "-invert");
      $color-light: cv.getVar($name, "", "-soft");
      $color-dark: cv.getVar($name, "", "-bold");
      &.is-#{$name} {
        background: $color;
        color: $color-invert;
        &.is-light {
          background: $color-light;
          color: $color-dark;
        }
      }
    }
  }

  .toast {
    text-align: center;
    padding: 0.5em 0.75em;
    border-radius: $toast-radius;
    margin: 0;
    box-shadow: $toast-shadow;
    pointer-events: none;
    background: cv.getVar("scheme-invert");
    color: cv.getVar("text-invert");
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    @each $name, $pair in $theme-colors {
      $color: cv.getVar($name);
      $color-invert: cv.getVar($name, "", "-invert");
      $color-light: cv.getVar($name, "", "-soft");
      $color-dark: cv.getVar($name, "", "-bold");
      &.is-#{$name} {
        background: $color;
        color: $color-invert;
        &.is-light {
          background: $color-light;
          color: $color-dark;
        }
      }
    }
  }
}

@keyframes floatie-progress-running {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
