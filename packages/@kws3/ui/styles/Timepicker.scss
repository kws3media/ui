@use "bulma/sass/utilities/css-variables" as cv;
@use "bulma/sass/utilities/derived-variables" as dv;
@use "bulma/sass/utilities/functions" as fn;

$kws-theme-colors: dv.$colors !default;
$kws-timepicker-background: #{cv.getVar("background")} !default;
$kws-timepicker-text: #{cv.getVar("text")} !default;

.flatpickr-calendar.hasTime.noCalendar {
  $isDarkMode: false;
  $lum: fn.bulmaColorLuminance($kws-timepicker-text);
  @if ($lum > 0.55) {
    $isDarkMode: true;
  }

  box-shadow:
    0 2px 5px rgba(0, 0, 0, 0.3),
    0 0 0 0.0625rem rgba(0, 0, 0, 0.1);
  background: $kws-timepicker-background;
  color: $kws-timepicker-text;
  border-radius: #{cv.getVar("radius")};

  .flatpickr-time {
    border: none;
    .flatpickr-time-separator {
      color: $kws-timepicker-text;
    }
    input,
    .flatpickr-am-pm {
      font-weight: normal;
      &:focus,
      &:active {
        font-weight: bold;
      }
    }
    .flatpickr-am-pm {
      border-radius: 0 #{cv.getVar("radius")} #{cv.getVar("radius")} 0;
    }
    .numInputWrapper {
      &:first-child {
        border-radius: #{cv.getVar("radius")} 0 0 #{cv.getVar("radius")};
        .numInput {
          border-radius: #{cv.getVar("radius")} 0 0 #{cv.getVar("radius")};
        }
      }
      &:hover {
        input,
        .flatpickr-am-pm {
          font-weight: bold;
        }
      }
    }
  }

  @each $name, $pair in $kws-theme-colors {
    $color: nth($pair, 1);
    $color-invert: null;
    @if length($pair) >= 2 {
      $color-invert: nth($pair, 2);
    } @else {
      $color-invert: nth($pair, 1);
    }
    $color-light: findLightColor($color);
    $color-dark: findDarkColor($color);

    //invert on darkmode by checking color luminance
    @if ($isDarkMode) {
      $color-dark: findLightColor($color);
      $color-light: findDarkColor($color);
    }

    &.is-#{$name} {
      border: 1px solid $color;
      input,
      .flatpickr-am-pm {
        color: $color-dark;
        &:hover,
        &:focus {
          background: $color-light;
        }
      }
      .numInputWrapper {
        &:hover {
          background: $color-light;
        }
        & span.arrowUp:after {
          border-bottom-color: $color-dark;
        }
        & span.arrowDown:after {
          border-top-color: $color-dark;
        }
      }
    }
  }
}
