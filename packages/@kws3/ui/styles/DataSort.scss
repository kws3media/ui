@use "bulma/sass/utilities/initial-variables" as iv;
@use "bulma/sass/utilities/css-variables" as cv;
@use "bulma/sass/utilities/derived-variables" as dv;
@use "bulma/sass/utilities/mixins" as mx;

.sorting-filters {
  font-weight: bold;
  margin-top: -1.55rem;
  margin-bottom: 1.5rem;
  .field {
    gap: 0;
  }
  .control {
    background: cv.getVar("border");
    margin: 0 !important;
    padding: 0.2rem 0;
    &:first-child {
      padding-left: calc(0.625rem - 1px);
      border-radius: 0 0 0 #{cv.getVar("radius-medium")};
      background: darken(dv.$border, 5%);
      padding-right: calc(0.625rem - 1px);
    }
    &:last-child {
      border-radius: 0 0 #{cv.getVar("radius-medium")} 0;
    }
  }
  .select {
    height: auto;
    select {
      padding-top: 0.2rem;
      padding-bottom: 0.2rem;
      border: none;
      background: transparent;
      color: #{cv.getVar("primary")};
      height: auto;
      font-weight: bold;
      &:focus,
      &:active {
        border: none;
        box-shadow: none;
      }
      &.is-fullwidth {
        width: 100%;
      }
    }
    &::after {
      border-color: #{cv.getVar("primary")};
    }
  }
}

@include mx.mobile {
  .sorting-filters {
    margin-top: 0rem;
    .field {
      justify-content: center;
    }
    .control {
      &:first-child {
        border-radius: #{cv.getVar("radius-large")} 0 0 #{cv.getVar(
            "radius-large"
          )};
      }
      &:last-child {
        border-radius: 0 #{cv.getVar("radius-large")} #{cv.getVar(
            "radius-large"
          )} 0;
        flex-grow: 1;
        flex-shrink: 1;
        .select {
          width: 100%;
        }
      }
    }
  }
}
