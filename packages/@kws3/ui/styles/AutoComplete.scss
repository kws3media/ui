@use "bulma/sass/utilities/css-variables" as cv;
@use "bulma/sass/utilities/derived-variables" as dv;
@use "bulma/sass/utilities/functions" as fn;

$theme-colors: dv.$colors !default;
$radius: cv.getVar("radius") !default;
$border-color: cv.getVar("border") !default;
$box-shadow:
  0 0.5em 1em -0.125em rgb(10 10 10 / 10%),
  0 0px 0 1px rgb(10 10 10 / 2%) !default;
$focus-border-color: cv.getVar("input-focus-border-color") !default;
$focus-box-shadow-size: cv.getVar("focus-shadow-size") !default;
$focus-box-shadow-color: hsl(
  cv.getVar("focus-h"),
  cv.getVar("focus-s"),
  cv.getVar("focus-l"),
  cv.getVar("focus-shadow-alpha")
) !default;
$disabled-background-color: cv.getVar(
  "input-disabled-background-color"
) !default;
$disabled-border-color: cv.getVar("input-disabled-border-color") !default;
$disabled-color: cv.getVar("input-disabled-color") !default;
$selecting-color: cv.getVar("primary-invert") !default;
$selecting-background: cv.getVar("primary") !default;
$text-matches-color: currentColor !default;
$text-matches-background: transparent !default;
$text-matches-font-weight: cv.getVar("weight-bold") !default;
$options-background: cv.getVar("scheme-main-ter") !default;

$__modal-z: 41 !default;
@if variable-exists("modal-z") {
  $__modal-z: $modal-z;
}

$options-z-index: $__modal-z + 1 !default;

.kws-autocomplete {
  position: relative;
  align-items: center;
  display: flex;
  cursor: text;
  height: auto;
  min-height: 2.5em;
  padding-top: calc(0.4em - 1px);
  padding-bottom: calc(0.4em - 1px);
  &:focus-within {
    border-color: $focus-border-color;
    box-shadow: $focus-box-shadow-size $focus-box-shadow-color;
  }
  &.is-disabled {
    background-color: $disabled-background-color;
    border-color: $disabled-border-color;
    color: $disabled-color;
    cursor: not-allowed;
  }
  &.is-readonly {
    box-shadow: none;
  }

  input {
    border: none !important;
    outline: none !important;
    background: none !important;
    /* needed to hide red shadow around required inputs in some browsers */
    box-shadow: none !important;
    color: inherit;
    flex: 1;
    padding: 1pt;
    height: auto;
    min-height: 0;
  }

  ul.options {
    list-style: none;
    max-height: 50vh;
    padding: 0;
    cursor: pointer;
    overflow: auto;
    background: $options-background;
    border: 1px solid $border-color;
    box-shadow: $box-shadow;
    position: relative;
    z-index: 4;
    &[data-popper-placement="top"] {
      border-radius: $radius $radius 0 0;
      box-shadow: 0 -1px 6px rgba(0, 0, 0, 0.4);
    }
    &.hidden {
      display: none;
    }

    li {
      padding: 0.3em 0.5em;
      position: relative;
      word-break: break-all;
      &.active {
        // keyboard focused item
        color: $selecting-color;
        background: $selecting-background;
      }
      span.h {
        // highlight text matches
        font-weight: $text-matches-font-weight;
        color: $text-matches-color;
        background: $text-matches-background;
      }
    }
  }
}

@each $name, $pair in $theme-colors {
  $color: nth($pair, 1);
  $color-invert: fn.bulmaFindColorInvert($color);
  $color-light: fn.bulmaFindLightColor($color);
  $color-dark: fn.bulmaFindDarkColor($color);
  .kws-autocomplete {
    &.is-#{$name} {
      border-color: $color;
      &:focus-within {
        box-shadow: $focus-box-shadow-size
          hsla(
            cv.getVar($name, "", "-h"),
            cv.getVar($name, "", "-s"),
            cv.getVar($name, "", "-l"),
            cv.getVar("input-focus-shadow-alpha")
          );
      }
      ul.options {
        li {
          &.selected {
            color: $color-dark;
            background: $color-light;
          }
          &.active {
            color: $color-invert;
            background: $color;
          }
        }
      }
    }
  }
}

#kws-overlay-root {
  .kws-autocomplete {
    position: absolute;
    z-index: $options-z-index;
  }
}
