@use "bulma/sass/utilities/css-variables" as cv;
@use "bulma/sass/utilities/functions" as fn;

$box-shadow: cv.getVar("shadow") !default;
$th-background: cv.getVar("table-background-color") !default;
$th-color: cv.getVar("text") !default;
$tag-margin: 0 0.125rem 0.125rem 0 !default;
$icon-size: 1.5em !default;
$checked-row-background: cv.getVar("info-light") !default;
$checked-row-color: cv.getVar("info") !default;
$checked-row-border-color: $checked-row-color !default;
$active-row-background: cv.getVar("table-row-active-background-color") !default;
$active-row-color: cv.getVar("table-row-active-color") !default;
$active-row-border-color: $active-row-color !default;
$background: cv.getVar("table-background-color") !default;
$striped-row-background: cv.getVar(
  "table-striped-row-even-background-color"
) !default;
$sticky-column-border-color: cv.getVar("border") !default;
$sticky-column-active-row-border-color: $active-row-border-color !default;
$hover-background-color: cv.getVar("table-row-hover-background-color") !default;
$even-row-hover-background-color: cv.getVar(
  "table-striped-row-even-hover-background-color"
) !default;
$cell-border-color: cv.getVar("table-cell-border-color") !default;

.table.kws-grid-view {
  box-shadow: $box-shadow;
  th {
    background: $th-background;
    color: $th-color;
    vertical-align: middle;
  }
  td {
    vertical-align: middle;
  }
  &.is-bordered {
    tr {
      th:last-child,
      td:last-child {
        border-right-width: 0px;
      }
      th:first-child,
      td:first-child {
        border-left-width: 0px;
      }
    }
    tr:first-child {
      th,
      td {
        border-top-width: 0px;
      }
    }
  }
  .tag {
    margin: $tag-margin;
  }
  td.is-icon {
    width: 25px;
    vertical-align: middle;
    .icon {
      font-size: $icon-size;
    }
  }
  &.is-hoverable {
    tr {
      cursor: pointer;
    }
  }

  tr.is-checked {
    background-color: $checked-row-background !important;
    td {
      background-color: $checked-row-background !important;
      color: $checked-row-color !important;
      border-color: $checked-row-border-color !important;
    }
  }

  &.is-narrow {
    th {
      font-size: 0.9rem;
      line-height: 1.2;
    }
    td,
    th {
      padding: 0.25rem 0.4rem;
    }
  }
}

.data-table {
  overflow: auto;
}
.kws-sticky-columns-table-wrapper {
  position: relative;
  box-shadow: $box-shadow;

  .data-table {
    margin-bottom: 1.5rem;
    .table {
      margin-bottom: 0;
    }
  }

  .data-table .table {
    &.is-hoverable {
      tbody {
        tr:not(.is-selected):not(.is-checked):hover {
          td.is-sticky-column {
            background-color: $hover-background-color;
          }
        }
      }
    }
    &.is-striped {
      tbody {
        tr:not(.is-selected):nth-child(odd) td.is-sticky-column {
          background: $background;
        }
        tr:not(.is-selected):nth-child(even) td.is-sticky-column {
          background: $striped-row-background;
        }
        tr.is-selected {
          background-color: transparent;
          td {
            background: $active-row-background;
            color: $active-row-color;
            border-color: $active-row-border-color;
          }
        }
      }
      &.is-hoverable {
        tbody {
          tr:not(.is-selected):not(.is-checked):hover {
            td.is-sticky-column {
              background-color: $hover-background-color;
            }
            &:nth-child(even) {
              td.is-sticky-column {
                background-color: $even-row-hover-background-color;
              }
            }
          }
        }
      }
    }
    td,
    th {
      overflow: hidden;
      &.is-sticky-column {
        position: sticky;
        z-index: 2;
        &:first-child {
          left: 0;
        }
      }
    }
    &.is-bordered {
      td.is-sticky-column,
      th.is-sticky-column {
        box-shadow: inset -1px 0 0 $sticky-column-border-color;
        border-left-width: 0;
        border-right-width: 0;
      }
      tr.is-selected {
        td.is-sticky-column,
        th.is-sticky-column {
          box-shadow: inset -1px 0 0 $sticky-column-active-row-border-color;
        }
      }
    }
  }

  .fake-shadow-contraint {
    position: absolute;
    pointer-events: none;
    top: 0;
    right: 0;
    bottom: 0;
    width: 15px;
    overflow: hidden;
    .fake-inner-shadow {
      position: absolute;
      top: 0;
      right: -1px;
      height: 100%;
      width: 1px;
      box-shadow:
        0 0 6px 0 #000,
        0 0 9px 0 #000,
        0 0 15px 0 #000;
    }

    &.left {
      right: auto;
      left: 0;
      .fake-inner-shadow {
        right: auto;
        left: -1px;
      }
    }
  }
}
