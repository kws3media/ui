(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{"./src/stories/utils/KeyboardEvents/makekeyevents.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"_2CreateKeyEvents",(function(){return makekeyevents_stories_2CreateKeyEvents}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),version=(__webpack_require__("./node_modules/ts-dedent/esm/index.js"),__webpack_require__("./src/version.mdx")),internal=__webpack_require__("./node_modules/svelte/internal/index.mjs"),keyboard=__webpack_require__("./packages/@kws3/ui/keyboard/index.js");function create_fragment(ctx){let div3,div2,div1,div0,label,t1,p0,t11,p1,input,CtrlAltC_action,AltF8_action,MetaShiftK_action,ShiftX_action,ctrlOrMetaAltK_action,t12,span,t13,mounted,dispose;return{c(){div3=Object(internal.B)("div"),div2=Object(internal.B)("div"),div1=Object(internal.B)("div"),div0=Object(internal.B)("div"),label=Object(internal.B)("label"),label.textContent="Use following key combinations to check custom key events:",t1=Object(internal.ib)(),p0=Object(internal.B)("p"),p0.innerHTML="<code>Ctrl + Alt + c</code>, <code>Alt + F8</code>,\n          <code>Meta + Shift + k</code>, <code>Shift + x</code> \n          <code>Ctrl (win/lin) Command (mac) + Alt + k</code>",t11=Object(internal.ib)(),p1=Object(internal.B)("p"),input=Object(internal.B)("input"),t12=Object(internal.ib)(),span=Object(internal.B)("span"),t13=Object(internal.nb)(ctx[0]),Object(internal.k)(label,"for",""),Object(internal.k)(input,"type","text"),Object(internal.k)(input,"class","input"),Object(internal.k)(span,"class","help is-sucess has-text-success"),Object(internal.k)(div0,"class","field"),Object(internal.k)(div1,"class","column"),Object(internal.k)(div2,"class","columns")},m(target,anchor){Object(internal.Q)(target,div3,anchor),Object(internal.h)(div3,div2),Object(internal.h)(div2,div1),Object(internal.h)(div1,div0),Object(internal.h)(div0,label),Object(internal.h)(div0,t1),Object(internal.h)(div0,p0),Object(internal.h)(div0,t11),Object(internal.h)(div0,p1),Object(internal.h)(p1,input),Object(internal.h)(div0,t12),Object(internal.h)(div0,span),Object(internal.h)(span,t13),mounted||(dispose=[Object(internal.c)(CtrlAltC_action=ctx[1].call(null,input,ctx[7])),Object(internal.c)(AltF8_action=ctx[2].call(null,input,ctx[8])),Object(internal.c)(MetaShiftK_action=ctx[3].call(null,input,ctx[9])),Object(internal.c)(ShiftX_action=ctx[4].call(null,input,ctx[10])),Object(internal.c)(ctrlOrMetaAltK_action=ctx[5].call(null,input,ctx[11]))],mounted=!0)},p(ctx,[dirty]){1&dirty&&Object(internal.fb)(t13,ctx[0])},i:internal.U,o:internal.U,d(detaching){detaching&&Object(internal.A)(div3),mounted=!1,Object(internal.ab)(dispose)}}}function instance($$self,$$props,$$invalidate){const CtrlAltC=Object(keyboard.g)("ctrl+alt+c"),AltF8=Object(keyboard.g)("alt+F8"),MetaShiftK=Object(keyboard.g)("meta+shift+k"),ShiftX=Object(keyboard.g)("shift+x"),ctrlOrMetaAltK=Object(keyboard.g)("ctrl+alt+k",!0);let eventText="";function eventKeyPressed(event,key){$$invalidate(0,eventText=key+" Pressed")}return[eventText,CtrlAltC,AltF8,MetaShiftK,ShiftX,ctrlOrMetaAltK,eventKeyPressed,event=>{eventKeyPressed(0,"`Ctrl + Alt + c`")},event=>{eventKeyPressed(0,"`Alt + F8`")},event=>{eventKeyPressed(0,"`Meta + Shift + k`")},event=>{eventKeyPressed(0,"`Shift + x`")},event=>{eventKeyPressed(0,"`Ctrl (win/lin) Command (mac) + Alt + k`")}]}class MakeKeyEvent_svelte_MakeKeyEvent extends internal.b{constructor(options){super(),Object(internal.O)(this,options,instance,create_fragment,internal.bb,{})}}var MakeKeyEvent_svelte=MakeKeyEvent_svelte_MakeKeyEvent;MakeKeyEvent_svelte_MakeKeyEvent.__docgen={version:3,name:"MakeKeyEvent.svelte",data:[],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};var _excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(esm.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.b)(version.a,{mdxType:"Version"}),Object(esm.b)(dist_esm.e,{title:"Utils/2. Examples/KeyboardEvents/2. Create Key Events",mdxType:"Meta"}),Object(esm.b)("h3",null,"makeKeyDefinition"),Object(esm.b)("p",null,"The ",Object(esm.b)("inlineCode",{parentName:"p"},"makeKeyDefinition")," is a factory helper used to create custom keydown handler events.\nKey combinations can be made with any modifier keys from ",Object(esm.b)("inlineCode",{parentName:"p"},"Shift"),", ",Object(esm.b)("inlineCode",{parentName:"p"},"Ctrl"),", ",Object(esm.b)("inlineCode",{parentName:"p"},"Alt"),", ",Object(esm.b)("inlineCode",{parentName:"p"},"Meta")," with characters, numbers or function keys."),Object(esm.b)("h4",null,Object(esm.b)("strong",{parentName:"h4"},"Parameters")),Object(esm.b)("ul",null,Object(esm.b)("li",{parentName:"ul"},"definition : ",Object(esm.b)("inlineCode",{parentName:"li"},"type: Number | string")," can be a string like ",Object(esm.b)("inlineCode",{parentName:"li"},"Enter"),", ",Object(esm.b)("inlineCode",{parentName:"li"},"Tab")," or number as keyCode, also allows key combinations like ",Object(esm.b)("inlineCode",{parentName:"li"},"ctrl+d"),", ",Object(esm.b)("inlineCode",{parentName:"li"},"ctrl+alt+x")),Object(esm.b)("li",{parentName:"ul"},"CommandKey : ",Object(esm.b)("inlineCode",{parentName:"li"},"type: boolean")," if true, in mac 'ctrl' key binding will be shift on 'command' key.")),Object(esm.b)("p",null,Object(esm.b)("strong",{parentName:"p"},"Returns:"),"\nFunction take params, node :",Object(esm.b)("inlineCode",{parentName:"p"},"type : DOM Element")," and event : ",Object(esm.b)("inlineCode",{parentName:"p"},"type: function"),"."),Object(esm.b)("h4",null,"Usage"),Object(esm.b)("pre",null,Object(esm.b)("code",{parentName:"pre",className:"language-js"},'import {makeKeyDefinition} from "@kws3/ui/keyboard";\nconst save = makeKeyDefinition(keyCombination) \n')),Object(esm.b)("p",null,Object(esm.b)("strong",{parentName:"p"},"Example:")),Object(esm.b)("pre",null,Object(esm.b)("code",{parentName:"pre",className:"language-html"},'<input type="text" use:ctrlAltC={(event) => {eventKeyPressed(event, "ctrl+alt+c")}} />\n\n<script>\n  import {makeKeyDefinition} from "@kws3/ui/keyboard";\n\n  const ctrlAltC = makeKeyDefinition("ctrl+alt+c");\n\n  function eventKeyPressed(event, key) {\n    eventText = key + " Pressed";\n  }\n<\/script>\n')),Object(esm.b)(dist_esm.g,{name:"2. Create Key Events",args:{},mdxType:"Story"},(function(args){return{Component:MakeKeyEvent_svelte}})))}MDXContent.isMDXComponent=!0;var makekeyevents_stories_2CreateKeyEvents=function _2CreateKeyEvents(args){return{Component:MakeKeyEvent_svelte}};makekeyevents_stories_2CreateKeyEvents.storyName="2. Create Key Events",makekeyevents_stories_2CreateKeyEvents.args={},makekeyevents_stories_2CreateKeyEvents.parameters={storySource:{source:"args => ({\n  Component: MakeKeyEvent\n})"}};var componentMeta={title:"Utils/2. Examples/KeyboardEvents/2. Create Key Events",includeStories:["_2CreateKeyEvents"]},mdxStoryNameToKey={"2. Create Key Events":"_2CreateKeyEvents"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.b)(dist_esm.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(esm.b)(MDXContent,null))}});__webpack_exports__.default=componentMeta}}]);